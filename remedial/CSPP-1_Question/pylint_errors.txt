************* Module Solution
Solution.py:3:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:4:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:5:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:6:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:7:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:8:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:9:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:9:8: C0326: Exactly one space required around comparison
		if i%9==0 and i!=0:
        ^^ (bad-whitespace)
Solution.py:9:17: C0326: Exactly one space required around comparison
		if i%9==0 and i!=0:
                 ^^ (bad-whitespace)
Solution.py:10:19: C0303: Trailing whitespace (trailing-whitespace)
Solution.py:10:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:11:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:12:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:13:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:14:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:15:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:16:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:17:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:17:20: C0326: Exactly one space required after comma
				print(sudoku(lis,i,j))
                    ^ (bad-whitespace)
Solution.py:17:22: C0326: Exactly one space required after comma
				print(sudoku(lis,i,j))
                      ^ (bad-whitespace)
Solution.py:18:14: C0326: Exactly one space required after comma
def sudoku(lis,i,j):
              ^ (bad-whitespace)
Solution.py:18:16: C0326: Exactly one space required after comma
def sudoku(lis,i,j):
                ^ (bad-whitespace)
Solution.py:19:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:20:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:21:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:22:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:23:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:24:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:25:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:25:18: C0326: Exactly one space required after comma
		for x in range(0,3):
                  ^ (bad-whitespace)
Solution.py:26:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:26:19: C0326: Exactly one space required after comma
			for y in range(0,3):
                   ^ (bad-whitespace)
Solution.py:27:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:28:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:29:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:29:18: C0326: Exactly one space required after comma
		for x in range(0,3):
                  ^ (bad-whitespace)
Solution.py:30:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:30:19: C0326: Exactly one space required after comma
			for y in range(3,6):
                   ^ (bad-whitespace)
Solution.py:31:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:32:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:33:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:33:18: C0326: Exactly one space required after comma
		for x in range(0,3):
                  ^ (bad-whitespace)
Solution.py:34:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:34:19: C0326: Exactly one space required after comma
			for y in range(6,9):
                   ^ (bad-whitespace)
Solution.py:35:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:36:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:37:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:37:18: C0326: Exactly one space required after comma
		for x in range(3,6):
                  ^ (bad-whitespace)
Solution.py:38:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:38:19: C0326: Exactly one space required after comma
			for y in range(0,3):
                   ^ (bad-whitespace)
Solution.py:39:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:40:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:41:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:41:18: C0326: Exactly one space required after comma
		for x in range(3,6):
                  ^ (bad-whitespace)
Solution.py:42:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:42:19: C0326: Exactly one space required after comma
			for y in range(3,6):
                   ^ (bad-whitespace)
Solution.py:43:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:44:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:45:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:45:18: C0326: Exactly one space required after comma
		for x in range(3,6):
                  ^ (bad-whitespace)
Solution.py:46:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:46:19: C0326: Exactly one space required after comma
			for y in range(6,9):
                   ^ (bad-whitespace)
Solution.py:47:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:48:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:49:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:49:18: C0326: Exactly one space required after comma
		for x in range(6,9):
                  ^ (bad-whitespace)
Solution.py:50:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:50:19: C0326: Exactly one space required after comma
			for y in range(0,3):
                   ^ (bad-whitespace)
Solution.py:51:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:52:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:53:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:53:18: C0326: Exactly one space required after comma
		for x in range(6,9):
                  ^ (bad-whitespace)
Solution.py:54:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:54:19: C0326: Exactly one space required after comma
			for y in range(3,6):
                   ^ (bad-whitespace)
Solution.py:55:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:56:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:57:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:57:18: C0326: Exactly one space required after comma
		for x in range(6,9):
                  ^ (bad-whitespace)
Solution.py:58:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:58:19: C0326: Exactly one space required after comma
			for y in range(6,9):
                   ^ (bad-whitespace)
Solution.py:59:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:60:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:61:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:62:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:63:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:63:20: C0326: Exactly one space required after comma
	inti = list(map(int,string))
                    ^ (bad-whitespace)
Solution.py:64:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:64:11: C0326: Exactly one space required after comma
	whole = [1,2,3,4,5,6,7,8,9]
           ^ (bad-whitespace)
Solution.py:64:13: C0326: Exactly one space required after comma
	whole = [1,2,3,4,5,6,7,8,9]
             ^ (bad-whitespace)
Solution.py:64:15: C0326: Exactly one space required after comma
	whole = [1,2,3,4,5,6,7,8,9]
               ^ (bad-whitespace)
Solution.py:64:17: C0326: Exactly one space required after comma
	whole = [1,2,3,4,5,6,7,8,9]
                 ^ (bad-whitespace)
Solution.py:64:19: C0326: Exactly one space required after comma
	whole = [1,2,3,4,5,6,7,8,9]
                   ^ (bad-whitespace)
Solution.py:64:21: C0326: Exactly one space required after comma
	whole = [1,2,3,4,5,6,7,8,9]
                     ^ (bad-whitespace)
Solution.py:64:23: C0326: Exactly one space required after comma
	whole = [1,2,3,4,5,6,7,8,9]
                       ^ (bad-whitespace)
Solution.py:64:25: C0326: Exactly one space required after comma
	whole = [1,2,3,4,5,6,7,8,9]
                         ^ (bad-whitespace)
Solution.py:65:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:66:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:67:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:68:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:69:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:69:23: C0326: Exactly one space required after comma
	string1 = list(map(str,numbers))
                       ^ (bad-whitespace)
Solution.py:70:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:71:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Solution.py:73:0: C0305: Trailing newlines (trailing-newlines)
Solution.py:1:0: C0103: Module name "Solution" doesn't conform to snake_case naming style (invalid-name)
Solution.py:1:0: C0111: Missing module docstring (missing-docstring)
Solution.py:2:0: C0111: Missing function docstring (missing-docstring)
Solution.py:8:1: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
Solution.py:14:1: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
Solution.py:18:0: C0111: Missing function docstring (missing-docstring)
Solution.py:20:1: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
Solution.py:22:5: C0103: Variable name "m" doesn't conform to snake_case naming style (invalid-name)
Solution.py:24:5: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:24:29: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:25:6: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
Solution.py:26:7: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
Solution.py:28:7: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:28:31: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:29:6: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
Solution.py:30:7: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
Solution.py:32:7: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:32:31: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:33:6: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
Solution.py:34:7: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
Solution.py:36:7: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:36:31: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:37:6: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
Solution.py:38:7: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
Solution.py:40:7: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:40:31: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:41:6: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
Solution.py:42:7: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
Solution.py:44:7: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:44:31: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:45:6: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
Solution.py:46:7: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
Solution.py:48:7: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:48:31: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:49:6: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
Solution.py:50:7: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
Solution.py:52:7: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:52:31: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:53:6: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
Solution.py:54:7: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
Solution.py:56:7: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:56:31: R1716: Simplify chained comparison between the operands (chained-comparison)
Solution.py:57:6: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
Solution.py:58:7: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
Solution.py:66:1: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
Solution.py:66:5: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
Solution.py:18:0: R0912: Too many branches (31/12) (too-many-branches)
Solution.py:1:0: W0611: Unused import re (unused-import)

----------------------------------------------------------------------
Your code has been rated at -11.11/10 (previous run: -11.27/10, +0.16)

